trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  JAVA_HOME: 'C:\Program Files\Java\jdk-17'
  NEWMAN_HOME: 'C:\Users\sergiomolina\AppData\Roaming\npm\node_modules\newman'
  NODE_HOME: 'C:\Program Files\nodejs'

steps:
- checkout: self

- script: |
    npm install -g newman
  displayName: 'Instalar Newman'

- script: |
    npm install -g node
  displayName: 'Instalar Node.js'

- powershell: |
    if (-not (Test-Path -Path 'allure-results')) {
      New-Item -ItemType Directory -Path 'allure-results' | Out-Null
    }
    if (Test-Path -Path 'allure-results') {
      Remove-Item -Recurse -Force 'allure-results'
    }
  displayName: 'Limpiar y crear directorios'

- powershell: |
    if (-not (Test-Path -Path 'allure-results')) {
      New-Item -ItemType Directory -Path 'allure-results' | Out-Null
    }
    $executorContent = @"
    {
        "name": "Azure DevOps",
        "type": "azuredevops",
        "reportName": "Allure Report"
    }
    "@
    $executorContent | Out-File -FilePath 'allure-results/executor.json' -Encoding utf8
  displayName: 'Setup'

- powershell: |
    if (-not (Test-Path -Path 'allure-results')) {
      New-Item -ItemType Directory -Path 'allure-results' | Out-Null
    }
    $environmentContent = @"
    {
        "Operating System": "Windows",
        "IDE": "Newman y Postman",
        "Environment": "Pruebas"
    }
    "@
    $environmentContent | Out-File -FilePath 'allure-results/environment.json' -Encoding utf8
  displayName: 'Create Environment File'

- script: |
    newman --version
  displayName: 'Verificar versión de Newman'

- powershell: |
    $testScripts = @(
      "anulacion_happypath.json",
      "Anulacion_401.json",
      "Anulacion_validar_mesageuid.json",
      "Anulacion_transferid.json",
      "anulacion_cambio_ACCEPT.json",
      "anulacion_cambio_PENDING.json",
      "anulacion_estado_vacio.json",
      "Anulacion_sin_enviar.json",
      "Validar_respuestas.json",
      "Anulacion_transferencia_ya_anulada.json"
    )

    foreach ($testScript in $testScripts) {
      try {
        & newman run $testScript -g globals.json -e environment.json -r allure --insecure
      } catch {
        Write-Host "Error al ejecutar una prueba con Newman: $_"
      }
    }
  displayName: 'Ejecutar Pruebas con Newman'

- powershell: |
    allure generate allure-results --clean
    Rename-Item 'allure-report\index.html' 'Anulacion_report.html'
  displayName: 'Crear reporte html con Newman'

- powershell: |
    Compress-Archive -Path 'allure-report\Anulacion_report.html' -DestinationPath 'allure-report\Anulacion_report.zip'
  displayName: 'Comprimir Reporte'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'allure-report'
    ArtifactName: 'AnulacionReport'
    publishLocation: 'Container'
  displayName: 'Publicar Artifacts'

- powershell: |
    $smtpServer = 'smtp.example.com'
    $smtpFrom = 'achjenkinsnewman@gmail.com'
    $smtpTo = 'molinabernal@gmail.com, svalle@achcolombia.com.co'
    $messageSubject = 'Resultado Microservicios Automatización'
    $messageBody = 'Resultados de la ejecución del lanzamiento de los microservicios de transfiya'
    $attachment = 'allure-report\Anulacion_report.zip'

    $message = New-Object system.net.mail.mailmessage
    $message.from = $smtpFrom
    $message.To.add($smtpTo)
    $message.Subject = $messageSubject
    $message.Body = $messageBody
    $attachment = New-Object System.Net.Mail.Attachment($attachment)
    $message.Attachments.Add($attachment)

    $smtp = New-Object Net.Mail.SmtpClient($smtpServer)
    $smtp.Send($message)
  displayName: 'Enviar correo con reporte'
